https://github.com/yaAlisaZhukova/PyGameLessons
-------------------------------------------
1. cd C:\web\AlicaPython\PyGame\Game1
-----------------------------------------
2. pip install pygame

C:\web\AlicaPython\PyGame\Game1
(venv) λ pip install pygame
Collecting pygame
  Downloading pygame-2.6.1-cp310-cp310-win_amd64.whl (10.6 MB)
---------------------------------------- 10.6/10.6 MB 20.5 MB/s eta 0:00:00
Installing collected packages: pygame
Successfully installed pygame-2.6.1

[notice] A new release of pip available: 22.2.1 -> 24.3.1
[notice] To update, run: python.exe -m pip install --upgrade pip
-----------------------------------------
3. python.exe -m pip install --upgrade pip 
----------------------------------
4. иду в папку, где я хочу создать проект
и создаю виртуальное окружение

cd C:\web\Python\Projects\Alisa\AlisaLessons
python -m venv venv   
--------------------------------------
5. активирую виртуальное окружение
Для работы в pyCharm не надо
 
cd C:\web\Python\Projects\Alisa\AlisaLessons
.\venv\Scripts\activate
---------------------------------------
6.
pyCharm interpreter

Создаю виртуальное окружение(Generate new):

File > Settings

Python -> Interpreter -> Add Interpreter -> Add Local Interpreter -> Generate new 
Location  C:\web\Python\Projects\MapList\.venv
-> OK
теперь вижу папку .venv

активирую виртуальное окружение:
.\venv\Scripts\activate
теперь вижу (.venv) 
теперь вижу дропдаун: File > Settings -> Python -> Interpreter -> dropdown -> Python 3.13 -> OK
проверяю, что работает pip install: pip install pyGame

если уже есть .venv и надо сменить Interprter(Select existing):
left pane, expand "Project: <your project name>" and select Python Interpreter:
Python -> Interpreter -> dropdown -> Python 3.13 -> OK

Python -> Interpreter -> Add Interpreter -> Add Local Interpreter -> Select existing ->
 Image папки -> AlisaLessons -> .venv -> Scripts -> Python.exe -> OK
------------------------------------
7.
pyCharm Terminal
view -> Tools Windows -> Terminal
------------------------------------
8.
Light Theme

File > Settings (Windows/Linux)
->Appearance & Behavior-> Appearance
-> Theme -> Light with Light Header -> OK 
--------------------------------------
9.
pip install pyGame
---------------------------------------
10. Создаю файл game.py

import pygame

pygame.init()

SCREEN_WIDTH = 800
SCREEN_HEIGHT = SCREEN_WIDTH * 0.7

screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption('Ghost') 

run = True
while run: 

    for event in pygame.event.get():
        # quit game
        if event.type == pygame.QUIT:
            run = False

    pygame.display.update()
pygame.quit()
---------------------------------------
11. 
 3.14.0 Documentation » The Python Tutorial » 4. More Control Flow Tools
https://docs.python.org/3/tutorial/controlflow.html
**************************************************************************************************************
                                                 Lesson 1
                                                int, str, float
**************************************************************************************************************
1. print("Hello World!")

sum = 1 + 2
print(sum)

#sum2 = 1 + '2' 

number = 1
print('type(number)', type(number))

string = '2'
print('string', string)
print('type(string)', type(string))

myInput = input()
print('type(myInput)', type(myInput))

myInputNumber = int(input())
print('type(myInputNumber)', type(myInputNumber))

myInputFloat = float(input())

print('myInputFloat', myInputFloat )
--------------------------------------------
2. Картинка скользит по экрану

C:\web\Python\Projects\Alisa\AlisaLessons\1_pyGame_rummingCircle.py

import pygame as pg

pg.init()

SCREEN_WIDTH = 800
SCREEN_HEIGHT = int(SCREEN_WIDTH * 0.7)

screen = pg.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pg.display.set_caption('Ghost')
WHITE = (255, 255, 255) 

carX =  240.0
carY =  0
carImg = pg.image.load('img/ghost.png')  

run = True
while run: 
    screen.fill(WHITE)
    screen.blit(carImg, (carX, carY))  

    if carY > SCREEN_HEIGHT:
        carY = 0
    carY += 0.05

    for event in pg.event.get():
        # quit game
        if event.type == pg.QUIT:
            run = False

    pg.display.update()
pg.quit() 
-----------------------------------------------
3. int, str, input

import pygame as pg

pg.init()

SCREEN_WIDTH = 800
SCREEN_HEIGHT = int(SCREEN_WIDTH * 0.7)

screen = pg.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pg.display.set_caption('Ghost')
WHITE = (255, 255, 255) 

carX =  int(input("Поместите привидение на экране, введите цифры от 1 до 800 "))
carY =  0
print('type(carY)', type(carY))

pathToImg = 'img/ghost.png'
print('type(pathToImg)', type(pathToImg))

carImg = pg.image.load('img/ghost.png')  

run = True
while run: 
    screen.fill(WHITE)
    screen.blit(carImg, (carX, carY))  

    if carY > SCREEN_HEIGHT:
        carY = 0
    carY += 0.05

    for event in pg.event.get():
        # quit game
        if event.type == pg.QUIT:
            run = False

    pg.display.update()
pg.quit()  
****************************************************************************************
                                            Lesson 2
                        clock.tick уменьшаем скорость вызова метода while
                        [pygame.K_LEFT] двигаем имидж вверх/вниз/вправо/влево                   
****************************************************************************************
1. clock.tick уменьшаем скорость вызова метода while

import pygame

pygame.init()
screen = pygame.display.set_mode((800, 600))
clock = pygame.time.Clock()

running = True
current_fps = 60  # Initial desired FPS

WHITE = (255, 255, 255) 

carX =  240
carY =  0 

carImg = pygame.image.load('img/ghost.png')  

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    screen.fill(WHITE)
    screen.blit(carImg, (carX, carY))  

    if carY > 600:
        carY = 0
    carY += 1

    pygame.display.flip()
    clock.tick(current_fps)  # Limits the frame rate
    
    pygame.display.update()
pygame.quit() 
-------------------------------------------------------------------
2. [pygame.K_LEFT] двигаем имидж вверх/вниз/вправо/влево

import pygame

pygame.init()
screen = pygame.display.set_mode((800, 600))
clock = pygame.time.Clock()

running = True
current_fps = 60  # Initial desired FPS

WHITE = (255, 255, 255) 

carX =  240
carY =  0 

carImg = pygame.image.load('img/ghost.png') 

def keyPressed():
    global carX, carY

    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT]:
        carX -= 2
    if keys[pygame.K_RIGHT]:
        carX += 1
    if keys[pygame.K_UP]:
        carY -= 1
    if keys[pygame.K_DOWN]:
        carY += 1

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    screen.fill(WHITE)
    screen.blit(carImg, (carX, carY))
    keyPressed()  

    if carX > 690:
        carX = -100
    carX += 1

    pygame.display.flip()
    clock.tick(current_fps)  # Limits the frame rate
    
    pygame.display.update()
pygame.quit()
--------------------------------------------------
3. mirty Alisa

import pygame

pygame.init()
screen = pygame.display.set_mode((800, 600))
clock = pygame.time.Clock()

running = True
current_fps = 60  # Initial desired FPS

WHITE = (255, 255, 255) 

carX =  240
carY =  0 
mirtyX = 100
mirtyY = 300

carImg = pygame.image.load('img/ghost.png') 
mirtyImg = pygame.image.load('img/mirty10.png') 

def keyPressed():
    global mirtyX, mirtyY

    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT]:
        mirtyX -= 1
    if keys[pygame.K_RIGHT]:
        mirtyX += 1
    if keys[pygame.K_UP]:
        mirtyY -= 1
    if keys[pygame.K_DOWN]:
        mirtyY += 1

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    screen.fill(WHITE)
    screen.blit(carImg, (carX, carY))
    screen.blit(mirtyImg, (mirtyX, mirtyY))
    keyPressed()  

    if carX > 690:
        carX = -100
    carX += 1

    pygame.display.flip()
    clock.tick(current_fps)  # Limits the frame rate
    
    pygame.display.update()
pygame.quit()
*********************************************************************************************************************************
                                     Lesson 3
								random, line, circle
                                Циклы While, For
*********************************************************************************************************************************
1. range(10)

for i in range(10):
    print('Привет')
-----------------------------------------
2. random.randint(0, 800)
#line:   pygame.draw.line(screen, (255,0,0), (100, 100), (lineX, lineY), 5) 
#circle: pygame.draw.circle(screen, BLUE, (center_x, center_y), radius, 5)

import pygame
import random

pygame.init()
screen = pygame.display.set_mode((800, 600))
clock = pygame.time.Clock()

running = True
current_fps = 16  # Initial desired FPS

WHITE = (255, 255, 255) 

lineX =  240
lineY =  0
 
screen.fill(WHITE) 

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    
    lineX = random.randint(0, 800)
    lineY = random.randint(0, 800)
    # Draw a red line from (100, 100) with a thickness of 5 pixels
    pygame.draw.line(screen, (255,0,0), (100, 100), (lineX, lineY), 5)  

    pygame.display.flip()
    clock.tick(current_fps)  # Limits the frame rate
    
    pygame.display.update()
pygame.quit()
------------------------------------------
3. random.randint(0, 800)
#line:   pygame.draw.line(screen, (255,0,0), (100, 100), (lineX, lineY), 5) 
#circle: pygame.draw.circle(screen, BLUE, (center_x, center_y), radius, 5)

import pygame
import random

pygame.init()
screen = pygame.display.set_mode((800, 600))
clock = pygame.time.Clock()

running = True
current_fps = 16  # Initial desired FPS

WHITE = (255, 255, 255) 

radius = 0
 
screen.fill(WHITE) 

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False 
    
    radius = random.randint(0, 800)
     
    # Draw a red line from (100, 100) with a thickness of 5 pixels
    pygame.draw.circle(screen, (255,0,0), (100, 100), radius, 5)  

    pygame.display.flip()
    clock.tick(current_fps)  # Limits the frame rate
    
    pygame.display.update()
pygame.quit()   
----------------------------------------
4. range(10)

import pygame

pygame.init()
screen = pygame.display.set_mode((800, 600))
clock = pygame.time.Clock()

running = True
current_fps = 60  # Initial desired FPS

WHITE = (255, 255, 255) 

carX =  240
carY =  0
mirtyX = 100
mirtyY = 400

carImg = pygame.image.load('img/ghost.png')
mirtyImg = pygame.image.load('img/mirty10.png')  

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    screen.fill(WHITE)
    screen.blit(carImg, (carX, carY))

    if carX > 690:
        carX = -100
    carX += 1

    for i in range(10):
        mirtyX = 80*i
        screen.blit(mirtyImg, (mirtyX, mirtyY))  

    pygame.display.flip()
    clock.tick(current_fps)  # Limits the frame rate
    
    pygame.display.update()
pygame.quit()
----------------------------------------
5. range от 0 до 800 с шагом 80
-(то есть x принимает последовательно значения 0, 80, 160, 240 . . .720)

import pygame

pygame.init()
screen = pygame.display.set_mode((800, 600))
clock = pygame.time.Clock()

running = True
current_fps = 60  # Initial desired FPS

WHITE = (255, 255, 255) 

carX =  240
carY =  0
mirtyX = 100
mirtyY = 400

carImg = pygame.image.load('img/ghost.png')
mirtyImg = pygame.image.load('img/mirty10.png')  

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    screen.fill(WHITE)
    screen.blit(carImg, (carX, carY))

    if carX > 690:
        carX = -100
    carX += 1

    for i in range(0,800,80):
        mirtyX = i
        screen.blit(mirtyImg, (mirtyX, mirtyY))  

    pygame.display.flip()
    clock.tick(current_fps)  # Limits the frame rate
    
    pygame.display.update()
pygame.quit()  
--------------------------------------------
6. range(10) Alisa

import pygame

pygame.init()
screen = pygame.display.set_mode((800, 600))
clock = pygame.time.Clock()

running = True
current_fps = 60  # Initial desired FPS

WHITE = (255, 255, 255) 

carX =  240
carY =  0 
mirtyX = 100
mirtyY = 300
tresX = 400
tresY = 500

carImg = pygame.image.load('img/ghost.png') 
mirtyImg = pygame.image.load('img/mirty10.png') 
tresImg = pygame.image.load('img/treasure.png') 

def keyPressed():
    global mirtyX, mirtyY

    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT]:
        mirtyX -= 1
    if keys[pygame.K_RIGHT]:
        mirtyX += 1
    if keys[pygame.K_UP]:
        mirtyY -= 1
    if keys[pygame.K_DOWN]:
        mirtyY += 1

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    screen.fill(WHITE)
    screen.blit(carImg, (carX, carY))
    screen.blit(mirtyImg, (mirtyX, mirtyY))
    keyPressed()  

    if carX > 690:
        carX = -100
    carX += 1

    for i in range(10):
        tresX = 40*i
        screen.blit(tresImg, (tresX, tresY))  


    pygame.display.flip()
    clock.tick(current_fps)  # Limits the frame rate
    
    pygame.display.update()
pygame.quit()
****************************************************************************************************************************
                                                    Lesson 4
                                                      list
****************************************************************************************************************************
1. random, mirtyY = random.randint(0, 600), list

import pygame
import random

pygame.init()
screen = pygame.display.set_mode((800, 600))
clock = pygame.time.Clock()

running = True
current_fps = 60  # Initial desired FPS

WHITE = (255, 255, 255) 

carX =  240
carY =  0
mirtyX = 100
mirtyY = []

for i in range(10): 
    mirtyY.append(random.randint(0, 450)) 

carImg = pygame.image.load('img/ghost.png')
mirtyImg = pygame.image.load('img/mirty10.png')  

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    screen.fill(WHITE)
    screen.blit(carImg, (carX, carY))

    if carX > 690:
        carX = -100
    carX += 1

    for i in range(10):
        mirtyX = i*80 
        screen.blit(mirtyImg, (mirtyX, mirtyY[i]))  

    pygame.display.flip()
    clock.tick(current_fps)  # Limits the frame rate
    
    pygame.display.update()
pygame.quit()
---------------------------------------------------------
2. map

size = [100, 200, 50]
size_lambda = map(lambda x: x*2, size)
size_lambda_list = list(map(lambda x: x*2, size))

print(size_lambda_list)
---------------------------------------------------------------
3. map

    size = [100, 200, 50]
	res = ""
    match size:
        case s1, s2:
            res = ", ".join(map(str, [s2, s1]))
        case s1, s2, s3:
            res = ", ".join(map(str, [s2, s1, s3])) 
        case _:
            res = "Некорректный формат данных"
	print(res)
-------------------------------------------------
4.

size = [100, 200, 50]
size_strings = map(str, size)

size_strings_list = list(map(str, size))
print(size_strings_list)

len_size = len(size)
res = ""
match len_size:
    case 2 | 3:
        res = ", ".join(size_strings)
    case _:
        res = "Некорректный формат данных"
print(res)	
-----------------------------------------------------------
7. Через каждые 300 циклов меняем позицию всех Mirty

import pygame
import random

pygame.init()
screen = pygame.display.set_mode((800, 600))
clock = pygame.time.Clock()

running = True
current_fps = 60  # Initial desired FPS

WHITE = (255, 255, 255) 

carX =  240
carY =  0
mirtyX = 100
mirtyY = []

count = 0

for i in range(10): 
    mirtyY.append(random.randint(0, 450)) 

carImg = pygame.image.load('img/ghost.png')
mirtyImg = pygame.image.load('img/mirty10.png')  

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    screen.fill(WHITE)
    screen.blit(carImg, (carX, carY))
    count += 1

    if carX > 690:
        carX = -100
    carX += 1

    for i in range(10):
        mirtyX = i*80
        if(count%300==0):
            mirtyY[i]=random.randint(0, 450) 
        screen.blit(mirtyImg, (mirtyX, mirtyY[i]))  

    pygame.display.flip()
    clock.tick(current_fps)  # Limits the frame rate
    
    pygame.display.update()
pygame.quit()

**********************************************************************************
                                    Lesson 4
									коллизии .colliderect
********************************************************************************** 
1. коллизии .colliderect

import pygame
import random

# --- Initialization ---
pygame.init()

# Screen settings
SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("Treasure Collector")

# Colors
WHITE = (255, 255, 255)

# --- Load images --- 
try:
    player_image = pygame.image.load('img/mirty10.png').convert_alpha()
    treasure_image = pygame.image.load('img/treasure.png').convert_alpha()
except pygame.error as e:
    print(f"Error loading image: {e}")
    pygame.quit()
    exit()

# --- Player setup ---
player_rect = player_image.get_rect(center=(SCREEN_WIDTH / 2, SCREEN_HEIGHT / 2))
player_speed = 5

# --- Treasure setup ---
treasures = []
for _ in range(10): # Create 10 treasures at random positions
    treasure_rect = treasure_image.get_rect(
        topleft=(random.randint(0, SCREEN_WIDTH - 50), random.randint(0, SCREEN_HEIGHT - 50))
    )
    treasures.append(treasure_rect)

# --- Game loop ---
running = True
clock = pygame.time.Clock()
score = 0

while running:
    # --- Event handling ---
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # --- Player movement ---
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT]:
        player_rect.x -= player_speed
    if keys[pygame.K_RIGHT]:
        player_rect.x += player_speed
    if keys[pygame.K_UP]:
        player_rect.y -= player_speed
    if keys[pygame.K_DOWN]:
        player_rect.y += player_speed

    # --- Collision detection ---
    # Use enumerate to get both the index and the item
    for i, treasure_rect in enumerate(treasures):
        if player_rect.colliderect(treasure_rect):
            # Collision detected, remove the treasure
            treasures.pop(i)
            score += 1
            print(f"Treasure collected! Score: {score}")
            break # Exit the loop once a treasure is collected

    # --- Drawing ---
    screen.fill(WHITE) # Clear the screen with a white background

    # Draw treasures
    for treasure_rect in treasures:
        screen.blit(treasure_image, treasure_rect)

    # Draw player
    screen.blit(player_image, player_rect)

    # Update the display
    pygame.display.flip()

    # Cap the frame rate
    clock.tick(60)

# --- Quit Pygame ---
pygame.quit()
******************************************************************************
                                      Lesson 9
                                 Классы. Полиморфизм.
****************************************************************************** 
1. class Player

import pygame

# Inherit from pygame.sprite.Sprite
class Player(pygame.sprite.Sprite):
    def __init__(self, x, y, image):
        self.image = image
        self.rect = self.image.get_rect(topleft=(x, y)) # Get the rect and position it

        self.speed = 5

    def update(self):
        # Example: Simple movement based on key presses
        keys = pygame.key.get_pressed()
        if keys[pygame.K_LEFT]:
            self.rect.x -= self.speed
        if keys[pygame.K_RIGHT]:
            self.rect.x += self.speed
        if keys[pygame.K_UP]:
            self.rect.y -= self.speed
        if keys[pygame.K_DOWN]:
            self.rect.y += self.speed

-----------------------------------------------------
2. main.py

import pygame
from player import Player

# --- Initialization and setup ---
pygame.init()
screen_width = 800
screen_height = 600
screen = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption("Player class")

player_image = pygame.image.load('img/mirty10.png')
player = Player(screen_width // 2 - 25, screen_height - 200, player_image) # Create a player instance

running = True
clock = pygame.time.Clock()

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    player.update() # Update the player's state

    screen.fill((255, 255, 255)) # Fill the background with white
    screen.blit(player.image, player.rect) # Draw the player on the screen

    pygame.display.flip()
    clock.tick(60)

pygame.quit()

 
***************************************************************************
                         empty_screen
***************************************************************************
1.
PyGame\01_empty_screen\game_empty_screen.py

import pygame

pygame.init()
SCREEN_WIDTH = 800
SCREEN_HEIGHT = int(SCREEN_WIDTH * 0.8)

screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption('Shooter')

run = True
while run: 
	 
	for event in pygame.event.get():
		#quit game
		if event.type == pygame.QUIT:
			run = False 

pygame.quit()
---------------------------------------------------
2. 02_background_savanna

gitPyGames\02_background_savanna\game.py

import pygame as pg

pg.init() 
SCREEN_WIDTH = 800
SCREEN_HEIGHT = int(SCREEN_WIDTH * 0.7)

screen = pg.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pg.display.set_caption('Shooter')

bgImg = pg.image.load('Savanna.png')

run = True
while run:
    screen.blit(bgImg, (0, 0))

    for event in pg.event.get():
        # quit game
        if event.type == pg.QUIT:
            run = False

    pg.display.update()
pg.quit()
-------------------------------------------------
3. 03_car_savanna

gitPyGames\03_car_savanna\game.py

import pygame as pg

pg.init()

SCREEN_WIDTH = 800
SCREEN_HEIGHT = int(SCREEN_WIDTH * 0.7)

screen = pg.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pg.display.set_caption('Shooter')

carX = 200
carY = 240
carImg = pg.image.load('blueCarSmall.png')
bgImg = pg.image.load('Savanna.png')

def keyPressed():
    global carX, carY

    keys = pg.key.get_pressed()
    if keys[pg.K_LEFT]:
        carX -= 0.5
    if keys[pg.K_RIGHT]:
        carX += 0.5
    if keys[pg.K_UP]:
        carY -= 1
    if keys[pg.K_DOWN]:
        carY += 0.5

run = True
while run:
    screen.blit(bgImg, (0, 0))
    screen.blit(carImg, (carX, carY))
    keyPressed()

    if carY > SCREEN_HEIGHT:
        carY = 240
    carY += 0.5

    for event in pg.event.get():
        # quit game
        if event.type == pg.QUIT:
            run = False

    pg.display.update()
pg.quit() 
-------------------------------------------------
4. гонки

import pygame as pg

pg.init()
screen = pg.display.set_mode((800, 600))
pg.display.set_caption('Shooter')

x = 250
y = 250
img = pg.image.load('road.png')
carImg = pg.image.load('blueCarSmall.png')
redCarImg = pg.image.load('greyCar.png')
rect = img.get_rect()
rect.center = (x, y)

carListY = [[-1100], [-500], [-350], [250]]
carListY2 = [[-680], [300] ]
carListY3 = [[-300]]
carListY4 = [[-320], [-110], [480]]

myCarX = 350
myCarY = 500

run = True

def keyPressed():
    global myCarX
    keys = pg.key.get_pressed()
    if keys[pg.K_LEFT]:
       myCarX = myCarX - 0.05
    if keys[pg.K_RIGHT]:
       myCarX = myCarX + 0.05

def carMove():
    for y in carListY:
        screen.blit(carImg, (240, y[0]))
        y[0] = y[0] + 0.05
        if y[0] > 1000:
            y[0] = -150

    for y in carListY2:
        screen.blit(carImg, (320, y[0]))
        y[0] = y[0] + 0.05
        if y[0] > 1000:
            y[0] = -150

    for y in carListY3:
        screen.blit(carImg, (430, y[0]))
        y[0] = y[0] + 0.05
        if y[0] > 1000:
            y[0] = -150

    for y in carListY4:
        screen.blit(carImg, (520, y[0]))
        y[0] = y[0] + 0.05
        if y[0] > 1000:
            y[0] = -150

while run:

    screen.blit(img, (240, 0))
    screen.blit(redCarImg, (myCarX, 540))
    carMove()
    keyPressed()

    for event in pg.event.get():
		# quit game
        if event.type == pg.QUIT:
            run = False
    pg.display.update()
pg.quit()
-----------------------------------------------













